// ======================================================================
// default.scss — responsive wrapper system + safe default layout styles
// Depends on: _variables.scss
// ======================================================================


// Guard: prevent horizontal scroll for this layout
body.layout-default { max-width: 100%; overflow-x: clip; }

// ---------------------------------------------
// Responsive shells (full-bleed sections)
// ---------------------------------------------
.r-shell {
  // full-bleed region background/padding; content sits in .r-container
  padding-block: clamp($sp-8, 3vw, $sp-16);
}

.r-shell--header {
  position: relative;
  z-index: $z-header;
}

// When you want the container to stretch to 100% (fluid section)
.r-shell--fluid .r-container {
  width: 100%;
  max-width: none;
  margin-inline: 0;
  padding-inline: $container-gutter; // maintain safe side gutters
}

// ---------------------------------------------
// Containers (centered columns at island width)
// ---------------------------------------------
.r-container {
  @include container; // width: $island-width; safe max with gutters
}

.r-container--narrow {
  width: ($island-width - 11.25rem); // “hero/reading” width
  max-width: calc(100% - 2 * #{$container-gutter});
  margin-inline: auto;
}

// ---------------------------------------------
// Main area (page body)
// ---------------------------------------------
.main {
  display: grid;
  gap: $sp-7;

  // prevent children from pushing width
  > * { min-width: 0; }
}

// Add offset if your mobile header is fixed
.main--offset { padding-top: calc(#{$navbar-height} + #{$sp-6}); }

// Optional: you can further narrow a specific block using .r-container--narrow
// around it; keeping .main generic avoids opinionated constraints.

// ---------------------------------------------
// Safe media & long content inside main/container
// ---------------------------------------------
.r-container :where(img, video, canvas, svg) {
  max-width: 100%;
  height: auto;
  display: block;
}

.r-container table {
  width: 100%;
  border-collapse: collapse;
  display: block;        // allow inner horizontal scroll without page widening
  overflow-x: auto;
}

.r-container pre {
  overflow: auto;
  font-family: $ff-mono;
  font-size: $fs-2;
  padding: $code-pad-y $code-pad-x;
  border-radius: $code-radius;

  @include theme-block {
    background: tone(background-100, light);
    border: 1px solid tone(border, light);
    color: tone(foreground, light);
  }
  @include theme-block-dark {
    background: tone(background-100, dark);
    border: 1px solid tone(border, dark);
    color: tone(foreground, dark);
  }
}

// Utilities: wrap long words/URLs and safe full-bleed inside a container
.u-wrap { overflow-wrap: break-word; word-break: break-word; }
.u-bleed { margin-inline: calc(-1 * #{$container-gutter}); }
@include mq-up($bp-lg) { .u-bleed-lg { margin-inline: calc(-1 * #{$container-gutter}); } }

// ---------------------------------------------
// Header overflow safety (if your header has fixed/attached parts)
// ---------------------------------------------
.m-header, .d-header { max-width: 100%; overflow-x: clip; }

.m-panel {
  // keep attached mobile panel within viewport & container
  left: 0; right: 0; margin-inline: auto;
  width: $island-width;
  max-width: calc(100% - 2 * #{$container-gutter});
  z-index: $z-overlay;
}
