// ======================================================================
// default.scss — Horizontal-scroll fixes + responsive container
// Targeted to the default layout only.
// Depends on: _variables.scss
// ======================================================================


// 0) Scope fixes to *default* layout only
body.layout-default {
  max-width: 100%;
  overflow-x: clip; // modern + perf-friendly vs hidden
}

// 1) Main container (centered island)
.main {
  @include container; // width: $island-width; gutter-safe
  padding-block: clamp($sp-8, 3vw, $sp-16);
  display: grid;
  gap: $sp-7;

  // Prevent children from causing overflow (grids/flex/items)
  > * { min-width: 0; }
}

// Optional: add top offset if your mobile header is fixed
.main--offset { padding-top: calc(#{$navbar-height} + #{$sp-6}); }

// Optional: narrower reading width helper
.main--narrow {
  width: ($island-width - 11.25rem); // hero-ish width, pure rem
  max-width: 100%;
  margin-inline: auto;
}

// 2) Header/panel safety (works even if header.html is included)
.m-header, .d-header { max-width: 100%; overflow-x: clip; }

.m-panel {
  // Keep attached panel inside viewport & container
  left: 0; right: 0; margin-inline: auto;
  width: $island-width;
  max-width: calc(100% - 2 * #{$container-gutter});
  // If your JS toggles .panel-open on body, height anim is safe:
  // max-height/opacity/transform live in the header stylesheet.
}

// 3) Media & embeds inside main (usual overflow culprits)
.main :where(img, video, canvas, svg) {
  max-width: 100%;
  height: auto;
  display: block;
}

// 4) Tables — allow horizontal scroll *inside* table block, not page
.main table {
  width: 100%;
  border-collapse: collapse;
  display: block;
  overflow-x: auto;
}
.main th, .main td { padding: $table-pad-y $table-pad-x; }

// 5) Code blocks — don’t widen page
.main pre {
  overflow: auto;
  font-family: $ff-mono;
  font-size: $fs-2;
  padding: $code-pad-y $code-pad-x;
  border-radius: $code-radius;

  @include theme-block {
    background: tone(background-100, light);
    border: 1px solid tone(border, light);
    color: tone(foreground, light);
  }
  @include theme-block-dark {
    background: tone(background-100, dark);
    border: 1px solid tone(border, dark);
    color: tone(foreground, dark);
  }
}

// 6) Long words/URLs safety (opt-in utility)
.main .u-wrap {
  overflow-wrap: break-word;
  word-break: break-word;
}

// 7) Full-bleed utility (safe, won’t trigger horizontal page scroll)
.main .u-bleed {
  margin-inline: calc(-1 * #{$container-gutter});
}
@include mq-up($bp-lg) {
  .main .u-bleed-lg { margin-inline: calc(-1 * #{$container-gutter}); }
}

// 8) Viewport-width replacement (avoid 100vw overflow issues)
.main .u-w-viewport { width: 100%; }

// 9) Compact island block (opt-in, for quick sections)
.main-section {
  border-radius: $radius-6;
  padding: clamp($sp-8, 1.6vw, $sp-16);
  backdrop-filter: blur(10px);

  @include theme-block {
    background-color: tone(surface, light);
    border: 1px solid tone(border, light);
    box-shadow: $shadow-light;
    color: tone(foreground, light);
  }
  @include theme-block-dark {
    background-color: tone(surface, dark);
    border: 1px solid tone(border, dark);
    box-shadow: $shadow-dark;
    color: tone(foreground, dark);
  }
}
.main-section--tight { padding: clamp($sp-7, 1.2vw, $sp-12); border-radius: $radius-5; }
